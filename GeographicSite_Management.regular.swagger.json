
{
  "swagger": "2.0",
  "info": {
    "description": "## TMF API Reference : TMF 674 - Geographic Site Management\n\n### Release : 17.5 - January 2018\n\nThis API covers the operations to manage (create, read, delete) sites that can be associated to a customer, an account, a service delivery or other entities. It defines a Site as a convenience class that allows to easily refer to places important to other entities, where a geographic place is the entity that can answer the question “where?”, allowing to determine where things are in relation to the earth's surface, and can be represented either in a textual structured way (geographic address) or as a geometry referred to a spatial reference system (geographic location).\n\n### Resources\n- GeographicSite\n- Hub\n\n### Operations\nGeographic Site API performs the following operations :\n- Retrieve a geographic site or a collection of geographic sites\n- Create a new site\n- Update a geographic site\n- Delete a geographic site\n- Notify events on geographic site\n\nCopyright © TM Forum 2018. All Rights Reserved",
    "version": "1.0",
    "title": "API GeographicSite"
  },
    "host": "serverRoot",
  "basePath":	"/geographicSiteManagement/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "tags": [
  
    {
      "name": "GeographicSite",
      "description": ""
    },
    {
      "name": "Hub",
      "description": ""
    }
  ],
  "paths": {
      "/geographicSite": {
      "post": {
        "tags": [
           "GeographicSite"
        ],        
        "operationId": "geographicSiteCreate",
        "summary": "Create a geographic site",
        "description": "This operation creates a geographic site entity.\nMandatory and non mandatory attributes, additional rules and default values are detailed in the specifications document.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "GeographicSite",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeographicSite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GeographicSite"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      },
      "get": {
        "tags": [
           "GeographicSite"
        ],        
        "operationId": "geographicSiteFind",
        "summary": "List geographic sites",
        "description": "This operation lists geographic site entities.\nAttribute selection is enabled for all first level attributes.\nFiltering may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Requested index for start of resouces to be provided in response requested by client",
            
              "type": "string"
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Requested number of resouces to be provided in response requested by client",
            
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
              "$ref": "#/definitions/GeographicSite"
              }
            },
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items matching criteria",
              "type": "integer",
              "format": "int32"
              },
              "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
              "type": "integer",
              "format": "int32"
              }
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/geographicSite/{geographicSiteId}": {
      "get": {
        "tags": [
           "GeographicSite"
        ],        
        "operationId": "geographicSiteGet",
        "summary": "Retrieve a geographic site",
        "description": "This operation retrieves a geographic site entity.\nAttribute selection is enabled for all first level attributes.\nFiltering may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "geographicSiteId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GeographicSite"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      },
      "put": {
        "tags": [
           "GeographicSite"
        ],        
        "operationId": "geographicSiteUpdate",
        "summary": "Update completely a geographic site",
        "description": "This operation updates completely the contents of a geographicSite resource by replacing the contents of that entity with the contents of the resource structure provided in the request.\nNotice that the PUT method is intended to modify completely the resource impacted, meaning that optional values that are not included in the request may be erased in the server after updating, and will not keep the previous value stored. Behavior of the server on optional values not included is undefined.\nNote : This operation is optional to be supported in this API.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "geographicSiteId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "GeographicSite",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeographicSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GeographicSite"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      },
      "patch": {
        "tags": [
           "GeographicSite"
        ],        
        "operationId": "geographicSitePatch",
        "summary": "Update partially a geographic site",
        "description": "This operation allows partial updates of a geographicSite resource entity. The definition of the modification is recommended to follow the json/patch (http://tools.ietf.org/html/rfc5789) and the extension proposed in Design Guidelines to manage modification of array entities.\nPatchable and non patchable attributes are detailed in the specifications document.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "geographicSiteId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "GeographicSite",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeographicSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GeographicSite"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      },
      "delete": {
        "tags": [
           "GeographicSite"
        ],        
        "operationId": "geographicSiteDelete",
        "summary": "Delete a geographic site",
        "description": "This operation deletes and removes from the server geographicSite resource previously registered.\nNote: this operation is available only to ADMIN API users\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "geographicSiteId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Success"

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/hub": {
      "post": {
        "tags": [
           "Hub"
        ],        
        "operationId": "hubCreate",
        "summary": "Register a listener",
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "data",
            "required": true,
            "in": "body",
            "description": "Data containing the callback endpoint to deliver the information",
            "schema": {
              "$ref": "#/definitions/HubInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Hub"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/hub/{hubId}": {
      "delete": {
        "tags": [
           "Hub"
        ],        
        "operationId": "hubDelete",
        "summary": "Unregister a listener",
        "description": "Clears the communication endpoint address that was set by creating the Hub\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "hubId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Success"

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    }
  },
"definitions": {
  

    "ErrorRepresentation": {
      "description": "Error representation",

      
      "required": [
          
            "code",
            "reason"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Application related code (as defined in the API or from a common list)",
              "type": "integer",
              "format": "int32"
        },
        "reason": {
          "description": "Text that explains the reason for error. This can be shown to a client user.",
              "type": "string"
        },
        "message": {
          "description": "Text that provides more details and corrective actions related to the error. This can be shown to a client user.",
              "type": "string"
        },
        "status": {
          "description": "Http error code extension like 400-2",
              "type": "string"
        },
        "referenceError": {
          "description": "URL pointing to documentation describing the error",
              "type": "string"
        },
        "@type": {
          "description": "Indicates the type of resource",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "Link to schema describing this REST resource",
              "type": "string"
        }
      }
      
    },

    "GeographicSite": {
      "description": "The GeographicSite resource represents a class that allows to easily refer to Places important to other entities (such as a customer, an account, a product,…)",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the site within the server",
              "type": "string"
        },
        "href": {
          "description": "An URI used to access to the site resource",
              "type": "string"
        },
        "name": {
          "description": "The name that the site is known by",
              "type": "string"
        },
        "description": {
          "description": "Text describing additional information regarding the site",
              "type": "string"
        },
        "code": {
          "description": "A code that may be used for some addressing schemes e.g. [ANSI T1.253-1999]",
              "type": "string"
        },
        "status": {
          "description": "The condition of the GeographicSite, such as active, inactive, planned",
              "type": "string"
        },
        "@baseType": {
          "description": "Indicates the base type of the resource for extensibility and polymorphism purposes to differentiate the definition of different type of sites (enterprise, residential, …)",
              "type": "string"
        },
        "@type": {
          "description": "Indicates the type of the resource for extensibility purposes",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "A Link to the schema describing this REST Resource",
              "type": "string"
        },
        "address": {
          
              "$ref": "#/definitions/GeographicAddress"
        },
        "geographicLocation": {
          
              "$ref": "#/definitions/GeographicLocation"
        },
        "calendar": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/CalendarPeriod"
          }
        },
        "relatedParty": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/RelatedPartyRef"
          }
        },
        "siteRelationship": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/SiteRelationship"
          }
        }
      }
      
    },

    "GeographicAddress": {
      "description": "Defines an address and/or identifies an existing address entity. An address allows textual description of an existing place over the surface of the Earth. This resource could be invoked as reference or value",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the entity within the server",
              "type": "string"
        },
        "href": {
          "description": "Reference of the entity",
              "type": "string"
        },
        "streetNr": {
          "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses",
              "type": "string"
        },
        "streetNrSuffix": {
          "description": "First street number suffix.",
              "type": "string"
        },
        "streetNrLast": {
          "description": "Last number in a range of street numbers allocated to a property",
              "type": "string"
        },
        "streetNrLastSuffix": {
          "description": ". Last street number suffix for a ranged address",
              "type": "string"
        },
        "streetName": {
          "description": "Name of the street or other street type",
              "type": "string"
        },
        "streetType": {
          "description": "Alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf",
              "type": "string"
        },
        "streetSuffix": {
          "description": "A modifier denoting a relative direction",
              "type": "string"
        },
        "postcode": {
          "description": "Descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also known as zipcode)",
              "type": "string"
        },
        "locality": {
          "description": "\"An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi-rural in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within a city, town or shire principally of urban character \" [ANZLICSTREET].",
              "type": "string"
        },
        "city": {
          "description": "City that the address is in",
              "type": "string"
        },
        "stateOrProvince": {
          "description": "State or Province that the address is in",
              "type": "string"
        },
        "country": {
          "description": "Country that the address is in",
              "type": "string"
        },
        "@type": {
          "description": "Indicates the type of the resource. Here can be UrbanPropertyAddress, FormattedAddress, JapanesePropertyAddress , AustralianPropertyAddress, etc…",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "A Link to the schema describing this REST Resource. The resource described UrbanPropertyAddress but a schema could be used for other property address description",
              "type": "string"
        },
        "geographicLocation": {
          
              "$ref": "#/definitions/GeographicLocation"
        },
        "geographicSubAddress": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicSubAddress"
          }
        }
      }
      
    },

    "GeographicLocation": {
      "description": "GeographicLocation reference. Defines a geo location and/or identifies an existing geo location entity\nA Geographic Location allows describing through coordinate(s) a point, a line or a space. This resource could be invoked as reference or value",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Identifier of a GeoLocation",
              "type": "string"
        },
        "href": {
          "description": "Reference  of a GeoLocation",
              "type": "string"
        },
        "name": {
          "description": "Name of a GeoLocation",
              "type": "string"
        },
        "geometryType": {
          "description": "Type allows describing Geolocation form: it could be a point, a line, a polygon, a cylinder, etc....",
              "type": "string"
        },
        "accuracy": {
          "description": "Accuracy of the points in the geometry specified",
              "type": "string"
        },
        "spatialRef": {
          "description": "Geocoding referential",
              "type": "string"
        },
        "@type": {
          "description": ". Indicates the type of the resource for extensibility purposes",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "A Link to the schema describing this REST Resource",
              "type": "string"
        },
        "geometry": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicPoint"
          }
        }
      }
      
    },

    "CalendarPeriod": {
      "description": "Calendar period",

      
      "required": [
          
            "status",
            "day",
            "hourPeriod"
      ],
      "type": "object",
      "properties": {
        "status": {
          "description": "Indication of the availability of the site (e.g.: open)",
              "type": "string"
        },
        "day": {
          "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, …)",
              "type": "string"
        },
        "timeZone": {
          "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)",
              "type": "string"
        },
        "hourPeriod": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/HourPeriod"
          }
        }
      }
      
    },

    "SiteRelationship": {
      "description": "Relationship between sites",

      
      "required": [
          
            "id",
            "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the related site entity within the server",
              "type": "string"
        },
        "href": {
          "description": "Reference of the related site entity",
              "type": "string"
        },
        "type": {
          "description": "Type of relationship",
              "type": "string"
        },
        "role": {
          "description": "Role of the related site in the relationship",
              "type": "string"
        },
        "validFor": {
          
              "$ref": "#/definitions/TimePeriod"
        }
      }
      
    },

    "RelatedPartyRef": {
      "description": "Related Party reference",

      
      "required": [
          
            "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the related party",
              "type": "string"
        },
        "href": {
          "description": "Reference of the related party",
              "type": "string"
        },
        "name": {
          "description": "Name of the related party",
              "type": "string"
        },
        "role": {
          "description": "Role played by the related party",
              "type": "string"
        },
        "validFor": {
          
              "$ref": "#/definitions/TimePeriod"
        },
        "@referredType": {
          "description": "Indicates the type of the resource. Here can be Individual or Organization",
              "type": "string"
        }
      }
      
    },

    "GeographicSubAddress": {
      "description": "Representation of a SubAddress. It is used for addressing within a property in an urban area (country properties are often defined differently). It may refer to a building, a building cluster, or a floor of a multistory building",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Identifier of the subAddress",
              "type": "string"
        },
        "href": {
          "description": "Reference of the subAddress",
              "type": "string"
        },
        "type": {
          "description": "Type of subAddress: it can be a subunit or a private street",
              "type": "string"
        },
        "name": {
          "description": "Name of the subAddress to identify it with a meaningful identification",
              "type": "string"
        },
        "subUnitType": {
          "description": "Type of subunit e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF",
              "type": "string"
        },
        "subUnitNumber": {
          "description": "Discriminator used for the subunit often just a simple number e.g. FLAT 5, may also be a range",
              "type": "string"
        },
        "levelType": {
          "description": "Describes level types within a building",
              "type": "string"
        },
        "levelNumber": {
          "description": "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2",
              "type": "string"
        },
        "buildingName": {
          "description": "Allows for buildings that have well-known names",
              "type": "string"
        },
        "privateStreetName": {
          "description": "Private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office",
              "type": "string"
        },
        "privateStreetNumber": {
          "description": "Private streets numbers internal to a private street",
              "type": "string"
        },
        "@type": {
          "description": "Type of the resource for thus subResource",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "A Link to the schema describing the structure of this REST Resource to allow for extensions",
              "type": "string"
        }
      }
      
    },

    "GeographicPoint": {
      "description": "A GeoPoint defines a geographic point through coordinates",

      
      "required": [
          
            "x",
            "y"
      ],
      "type": "object",
      "properties": {
        "x": {
          "description": "x coordinate (usually latitude)",
              "type": "string"
        },
        "y": {
          "description": "y coordinate (usually longitude)",
              "type": "string"
        },
        "z": {
          "description": "z coordinate (usually elevation)",
              "type": "string"
        }
      }
      
    },

    "TimePeriod": {
      "description": "A date time period",

      
      "type": "object",
      "properties": {
        "startDateTime": {
          "description": "",
              "type": "string",
              "format": "date-time"
        },
        "endDateTime": {
          "description": "",
              "type": "string",
              "format": "date-time"
        }
      }
      
    },

    "HourPeriod": {
      "description": "A time period",

      
      "required": [
          
            "startHour",
            "endHour"
      ],
      "type": "object",
      "properties": {
        "startHour": {
          "description": "The time when the status starts applying",
              "type": "string"
        },
        "endHour": {
          "description": "The time when the status ends applying",
              "type": "string"
        }
      }
      
    },

    "Hub": {
      "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the hub",
              "type": "string"
        },
        "callback": {
          "description": "The callback being registered",
              "type": "string"
        },
        "query": {
          "description": "Additional data to be passed",
              "type": "string"
        }
      }
      
    },

    "HubInput": {
      "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics",

      
      "type": "object",
      "properties": {
        "callback": {
          "description": "The callback being registered",
              "type": "string"
        },
        "query": {
          "description": "Additional data to be passed",
              "type": "string"
        }
      }
      
    }
  }
}
	